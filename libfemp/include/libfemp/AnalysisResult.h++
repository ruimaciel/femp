#ifndef FEMP_ANALYSIS_RESULT_HPP
#define FEMP_ANALYSIS_RESULT_HPP

#include <boost/tuple/tuple.hpp>
#include <la/Matrix.h++>
#include <la/Vector.h++>
#include <libfemp/ElementResults/ElementResults.h++>
#include <libfemp/ElementResults/ResultsRanges.h++>
#include <libfemp/Point3D.h++>
#include <map>

#include "Equation.h++"

namespace fem {

/**
 * Stores all the relevant analysis results which are generated by
 * fem::Analysis and are needed in post-processing.
 */
struct AnalysisResult {
	AnalysisResult();
	AnalysisResult(const AnalysisResult&);

	// The FEM equation bit
	Equation equation;

	std::map<size_t, boost::tuple<size_t, size_t, size_t>> lm;

	// A map between the reference to a node and the displacements of it's DoF
	std::map<size_t, fem::Point3D> displacements;

	// map between a element reference and the element's recovered values
	std::map<element_ref_t, ElementResults*> results;

	// this replaces the above code
	ResultsRanges<double> ranges;

	// the model's energy
	double energy;

	double volume;

	// elapsed time in miliseconds (taken from Qt's qint64
	long long int elapsed_time;

	void clear();
};

}  // namespace fem

#endif
